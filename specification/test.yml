openapi: 3.0.1
info:
  title: Описание API сервера проекта «Шесть городов».
  description: |-
    * Описание маршрутов сервера проекта.
    * Сервер доступен по адресу -
    [https://10.react.pages.academy/six-cities](https://10.react.pages.academy/six-cities)
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
tags:
  - name: hotels
    description: Действия с предложениями.
  - name: favorite
    description: Действия с избранными предложениями.
  - name: comments
    description: Действия с комментариями.
  - name: user
    description: Действия с пользователем.
paths:
  /hotels:
    get:
      tags:
        - hotels
      summary: Получить список предложений
      description: Возвращает массив предложений. Каждое предложение описано в виде объекта.
      operationId: getHotels
      responses:
        '200':
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/Hotel'
                    - type: object
  /hotels/{hotelId}:
    get:
      tags:
        - hotels
      summary: Получить предложение
      description: Возвращает предложение с идентификатором `hotelId`.
      operationId: getHotelById
      parameters:
        - name: hotelId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: Объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '404':
          description: Предложение не найдено
  /hotels/{hotelId}/nearby:
    get:
      tags:
        - hotels
      summary: Получить список предложений неподалёку
      description: Возвращает массив предложений. Каждое предложение описано в виде объекта.
      operationId: getHotelsNearby
      parameters:
      - name: hotelId
        in: path
        description: Уникальный идентификатор предложения
        required: true
        schema:
          type: number
          example: 1
      responses:
        '200':
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/Hotel'
                    - type: object
        '404':
          description: Предложение не найдено
  /favorite:
    get:
      tags:
        - favorite
      summary: Получить список избранных предложений
      description: Возвращает массив предложений, добавленных в избранное.
      operationId: getFavorites
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        '200':
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorMessage'
      security:
        - tokenAuth: []
  /favorite/{hotelId}/{status}:
    post:
      tags:
        - favorite
      summary: Изменить статус избранного у предложение
      description: Возвращает предложение с идентификатором `hotelId` с актуальным состоянием поля `isFavorite`
      operationId: postFavorite
      parameters:
        - name: hotelId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: number
            example: 1
        - name: status
          in: path
          description: Статус избранного предложения. Может быть `1` или `0`, где `1` добавляет предложение в избранное, а `0` удаляет
          required: true
          schema:
            type: number
            example: 1
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        '200':
          description: Объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorMessage'
      security:
        - tokenAuth: []
  /comments/{hotelId}:
    get:
      tags:
        - comments
      summary: Получить список комментариев
      description: Возвращает список комментариев для предложения с идентификатором `hotelId`.
      operationId: getComment
      parameters:
        - name: hotelId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: number
            example: 1
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: false
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        '200':
          description: Массив комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentGet'
        '400':
          description: Ошибка тела запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorMessage'
    post:
      tags:
        - comments
      summary: Добавить новый комментарий
      description: Добавляет новый комментарий для предложения с идентификатором `hotelId`.
      operationId: postComment
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
        - name: hotelId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        description: Объект с новым комментарием
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPost'
        required: true
      responses:
        '200':
          description: Массив комментариев для предложения с идентификатором `hotelId`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentGet'
        '400':
          description: Ошибка тела запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorMessage'
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorMessage'
      security:
        - tokenAuth: []
  /login:
    get:
      tags:
        - user
      summary: Проверить статус авторизации пользователя
      description: Возвращает информацию о статусе авторизации пользователя.
      operationId: getUserStatus
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        '200':
          description: Статус авторизации пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthInfo'
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorMessage'
      security:
        - tokenAuth: []
    post:
      tags:
        - user
      summary: Авторизоваться на сервере
      description: Отправляет авторизационные данные пользователя (логин и пароль).  В случае успешного запроса сервер вернёт токен, по которому в дальнейшем происходит авторизация. Этот токен необходимо передавать через заголовок X-Token. Если авторизация не проходит, сервер вернёт код состояния 401 при запросах на закрытые части сайта.
      operationId: postLogin
      requestBody:
        description: Объект, содержащий логин и пароль пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Статус авторизации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthInfo'
        '400':
          description: Ошибка тела запроса
          content: {}
  /logout:
    delete:
      tags:
        - user
      summary: Завершить сеанс пользователя
      description: Завершает сеанс работы — выход из закрытой части приложения.
      operationId: deleteLogout
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        '204':
          description: Сеанс завершён
      security:
        - tokenAuth: []
components:
  schemas:
    Hotel:
      type: object
      properties:
        bedrooms:
          type: number
          example: 3
        city:
          type: object
          properties:
            location:
              type: object
              properties:
                latitude:
                  type: number
                  example: 52.370216
                longitude:
                  type: number
                  example: 4.895168
                zoom:
                  type: number
                  example: 10
            name:
              type: string
              example: Amsterdam
        description:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        goods:
          type: array
          items:
            type: string
            example: Heating
        host:
          type: object
          properties:
            avatarUrl:
              type: string
              example: img/1.png
            id:
              type: number
              example: 3
            isPro:
              type: boolean
              example: true
            name:
              type: string
              example: Angelina
        id:
          type: number
          example: 1
        images:
          type: array
          items:
            type: string
            example: img/1.png
        isFavorite:
          type: boolean
          example: true
        isPremium:
          type: boolean
          example: false
        location:
          type: object
          properties:
            latitude:
              type: number
              example: 52.35514938496378
            longitude:
              type: number
              example: 4.673877537499948
            zoom:
              type: number
              example: 8
        maxAdults:
          type: number
          example: 4
        previewImage:
          type: string
          example: img/1.png
        price:
          type: number
          example: 120
        rating:
          type: number
          example: 4.8
        title:
          type: string
          example: Beautiful & luxurious studio at great location
        type:
          type: string
          example: apartment
    CommentGet:
      type: object
      properties:
        comment:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        date:
          type: string
          example: 2019-05-08T14:13:56.569Z
        id:
          type: number
          example: 1
        rating:
          type: number
          example: 4
        user:
          type: object
          properties:
            avatarUrl:
              type: string
              example: img/1.png
            id:
              type: number
              example: 1
            isPro:
              type: boolean
              example: false
            name:
              type: string
              example: Oliver.conner
    CommentPost:
      type: object
      properties:
        comment:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        rating:
          type: number
          example: 4
    User:
      type: object
      properties:
        email:
          type: string
          example: Oliver.conner@gmail.com
        password:
          type: string
          example: '12345678'
    AuthInfo:
      type: object
      properties:
        avatarUrl:
          type: string
          example: img/1.png
        email:
          type: string
          example: Oliver.conner@gmail.com
        id:
          type: number
          example: 1
        isPro:
          type: boolean
          example: false
        name:
          type: string
          example: Oliver.conner
        token:
          type: string
          example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
    AuthErrorMessage:
      type: object
      properties:
        error:
          type: string
          example: You are not logged in or you do not have permission to this page.
    NotFoundErrorMessage:
      type: object
      properties:
        error:
          type: string
          example: Hotel id 999 does not exist
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: X-Token
      in: header
